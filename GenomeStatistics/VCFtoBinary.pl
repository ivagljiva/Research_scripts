#!/usr/bin/perl
#
# @File VCFtoBinary.pl
# @Author Iva Veseli, Illinois Institute of Technology
# @Created Jul 21, 2015 9:03:27 AM
#
# Takes a VCF SNP file (generated by SNP calling software)
# creates a binary file representing the SNPs at each position in the genome
  # 0 = no SNP; 1 = SNP at this position
# This binary output can be used with other scripts; for instance, to calculate SNPs/kb across different ranges of the genome

# Input: .vcf file(s) with SNPs, ie from VarScan
# Output: .bin file(s)

use strict;
use warnings;

my $usage = "perl VCFtoBinary.pl *.vcf\n";
die $usage unless @ARGV;

my $file = shift @ARGV;
my $genomeLength = 2610419; #number of bp in genome - CHANGE this as needed
my %SNPhash; #stores the positions of each SNP

open IN, "$file" or die "Cannot open $file: $!\n";
$file =~ s/.vcf//;
open OUT, ">$file.bin" or die "Cannot open $file.bin: $!\n";

while (my $line = <IN>)
{
    chomp($line);
    next if ($line =~ /^#/); #skip comments
    #SNP line looks like: consensus.fasta|quiver	2719	.	T	C	.	PASS	ADP=397;WT=0;HET=1;HOM=0;NC=0	GT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR	0/1:255:400:397:224:173:43.58%:2.4408E-63:36:35:118:106:23:150
    if ($line =~ /^[\w\|\.]+\t(\d+)\t/)
    {
        print "Adding SNP at $1 to hash\n";
        $SNPhash{$1} = 1; #add SNP position to hash
    }

}
#write binary file
for my $position (1..$genomeLength)
{
    if (exists $SNPhash{$position})
    {
        print OUT "1";
    }
    else
    {
        print OUT "0";
    }
}
